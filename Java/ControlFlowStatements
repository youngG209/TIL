# 제어문 (Control Flow Statements)
- 프로그램의 순차적인 흐름 제어 : 조건문, 반복문 등이 있음
- 중괄호({})로 둘러싸여 있음, 해당 영역을 블록(block)이라 함

## 조건문 (Conditional Statements)
- 주어진 조건식의 걸과에 따라 별도의 명령을 수행하도록 제어하는 명령문

1. if 문 
   - 조건식의 결과가 true면 주어진 명령문을 실행, false면 실행하지 않음
   - 조건식이 여러개일 경우 중첩된 if / else if / else 문으로 조건식을 여러 개 명시할 수 있음
   - 삼항 연산자(조건식 ? 반환값1 : 반환값2)로 간결하게 표현가능

        
    문법
        if(조건식1) {  
            조건식1의 결과가 참일때 실행    
        }else if(조건식2){
            조건식1의 결과가 참일때 실행
        }else {
            조건식1의 결과도 거짓, 조건식2도 거짓일 때 실행
        }
2. switch 문
   
    - if문 보다 가독성이 더 좋고, 컴파일러가 최적화를 쉽게 할 수 있어서 속도도 빠름
    - But, 조건 값으로는  byte형, short형, char형, int형의 변수나 리터럴을 사용할 수 있음(사용 가능한 케이스가 if보다 적음)
    - And, 이러한 기본 타입에 해당되는 데이터를 객체로 포장해 주는 래퍼 클래스 (Wrapper class) Byte, Short, Character, Integer, String 클래스의 객체
    - And, enum(열거체, enumeration type)도 가능

            문법
            switch (조건 값) {
               case 값1:
                  조건 값이 값1일 때 실행하고자 하는 명령문;
                  break;

               case 값2:            
                    조건 값이 값2일 때 실행하고자 하는 명령문;            
                    break;
               ...

               default:            
                    조건 값이 어떠한 case 절에도 해당하지 않을 때 실행하고자 하는 명령문;      
                    break;
            }


## 반복문 (Iteration Statement)

- 일정 횟수 만큼 반복하여 수행하도록 제어하는 명령문

1. while 문

   - 특정 조건을 만족할 때까지 계속해서 주어진 명령문을 반복 실행 합니다. (무한 루프 주의)


         문법
         while (조건식) {
            조건식의 결과가 참인 동안 반복적으로 실행하는 명령문
            
            ...

            조건식의 겨로가를 변경하는 명령문
         }

2. do / while 문

   - while 문과는 달리 먼저 루프를 한번 실행한 후 에 조건식을 검사
   - 조건식의 결과와 상관없이 무조건 한번은 루프를 실행함


         문법
         do {
            조건식의 결과가 참인 동안 반복적으로 실행하는 명령문
            
            ...

            조건식의 겨로가를 변경하는 명령문
         }
         while (조건식)

3. for 문

   - 자체적으로 초기식, 조건식, 증감식을 모두 포함하고 있는 반복문


         문법
         for (초기식; 조건식; 증감식) {
            조건식의 결과가 참인 동안 반복적으로 실행하는 명령문
         }

4. 향상된(Enhanced) for 문 or for-each.문

   - 컬렉션 프레임워크와 배열에서 유용하게 자주 사용


         문법
         for (타입 변수 이름 : 배열 or 컬렉션 이름) {
            배열의 길이만큼 반복적으로 실행하는 명령문
         }