#자바 프로그래밍

## 자바 컴파일러 (Java compiler)
* 자바를 가지고 작성한 자바 소스 코드를 자바 가상머신이 이해할 수 있는 자바 바이트 코드로 변환
## 자바 바이트 코드 (Java bytecode)
* 자바 가상 머신이 이해할 수 있는 언어로 변환된 자바 소스 코드를 의미
* 자바 컴파일러에 의해 변환 되는 코드의 명령어 크기가 1바이트라서 자바 바이트 코드라 불림
* 확장자는 .class
## 자바 가상 머신(JVM, Java Virtual Machine)
* 자바 바이트 코드를 실행 시키기 위한 가상의 기계
* 자바로 작성된 모든 프로그램은 자바 가상 머신에서만 실행 될 수 있음
* 자바 프로그램과는 달리 JVM은 운영체제에 종속적이므로, 각 운영체제에 맞는 JVM을 설치해야함
    ###자바 가상 머신의 구성
    1. 자바 인터프리터 (interpreter) : 자바 컴파일러에 의해 변환된 자바 바이트 코드를 읽고 해석하는 역활
    2. 클래스 로더 (class loader) : 동적으로 클래스를 로딩해주는 역활
    3. JIT 컴파일러 (Just-In-Time compiler) : 프로그램이 실행 중인 런타임에 실제 기계어로 변환해 주는 컴파일러를 의미
    4. 가비지 컬렉터 (garbage collector) : 
        * 더이상 사용하지 않는 메모리를 자동으로 회수해 줌
        * Young 영역(Young Generation)
            * 새롭게 생성된 객체가 할당(Allocation)되는 영역
            * 대부분의 객체가 금방 Unreachable 상태가 되기 때문에, 많은 객체가 Young 영역에 생성되었다가 사라짐
            * Young 영역에 대한 가비지 컬렉션(Garbage Collection)을 Minor GC라고 부름
        *  Old 영역(Old Generation)
            * Young영역에서 Reachable 상태를 유지하여 살아남은 객체가 복사되는 영역
            * 복사되는 과정에서 대부분 Young 영역보다 크게 할당되며, 크기가 큰 만큼 가비지는 적게 발생
            * Old 영역에 대한 가비지 컬렉션(Garbage Collection)을 Major GC 또는 Full GC라고 부름
    
    