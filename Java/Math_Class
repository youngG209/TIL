# Math 클래스

## java.lang.Math 클래스

- 수학에서 자주 사용하는 상수들과 함수들을 미리 구현해 놓은 클래스
- 모든 메소드가 클래스 메소드(static method)이므로, 객체를 생성하지 않고도 바로 사용 가능

## Math.E와 Math.PI

- Math 클래스에서 정의되어 있는 클래스 필드

1. Math.E : 오일러의 수라 불리며, 자연 로그(Natural Logarithms)의 밑(Base) 값으로 약 2.718을 의미
2. Math.PI : 원의 원주를 지름으로 나눈 비율(원주율) 값으로 약 3.14159를 의미함

## random() 메소드

- 0.0 이상 1.0미만의 범위에서 임의의 double형 값을 하나 생성하여 반환 합니다.
- 내부적으로 java.util 패키지의 Random 클래스를 사용한 의사 난수 발생기를 사용하여 임의의 수를 생성함 <br/> -> Random 클래스의 nextInt() 메소드를 사용해도 난수 생성가능


        예제
            // 1. 난수 생성
            System.out.println((int)(Math.random() * 100)); // 0 ~ 99

            Random ran = new Random();            
            System.out.println(ran.nextInt(100));           // 0 ~ 99

            // 2. 난수 생성 범위 조절
            (int)(Math.random() * 6);       // 0 ~ 5            
            ((int)(Math.random() * 6) + 1); // 1 ~ 6            
            ((int)(Math.random() * 6) + 3); // 3 ~ 8

## abs() 메소드

- 전달된 값이 음수면 그 값의 절댓값을 반환하며, 전달된 값이 양수면 전달된 값을 그대로 반환함

        예제
            System.out.println(Math.abs(10));    // 10            
            System.out.println(Math.abs(-10));   // 10            
            System.out.println(Math.abs(-3.14)); // 3.14
        
        실행 결과
            10            
            10            
            3.14

## floor() 메소드, ceil() 메소드와 round() 메소드

-floor() 메소드는 인수로 전달받은 값과 같거나 작은 수 중에서 가장 큰 정수를 반환
-또한, ceil() 메소드는 반대로 인수로 전달받은 값과 같거나 큰 수 중에서 가장 작은 정수를 반환
-round() 메소드는 전달받은 실수를 소수점 첫째 자리에서 반올림한 정수를 반환

        예제
            System.out.println(Math.ceil(10.0));      // 10.0        
            System.out.println(Math.ceil(10.1));      // 11.0        
            System.out.println(Math.ceil(10.000001)); // 11.0
            
            System.out.println(Math.floor(10.0));     // 10.0        
            System.out.println(Math.floor(10.9));     // 10.0
            
            System.out.println(Math.round(10.0));     // 10        
            System.out.println(Math.round(10.4));     // 10        
            System.out.println(Math.round(10.5));     // 11
        
        실행 결과
            10.0       
            11.0        
            11.0        
            
            10.0        
            10.0        
    
            10        
            10        
            11

## max() 메소드와 min() 메소드

- max() 메소드는 전달된 두 값을 비교하여 그중에서 큰 값을 반환하며, min() 메소드는 그중에서 작은 값을 반환

        예제
            System.out.println(Math.max(3.14, 3.14159)); // 3.14159
            System.out.println(Math.min(3.14, 3.14159)); // 3.14
            System.out.println(Math.max(-10, -11));      // -10
            System.out.println(Math.min(-10, -11));      // -11
        
        실행 결과
            3.14159
            3.14
            -10
            -11

## pow() 메소드와 sqrt() 메소드

- pow() 메소드는 전달된 두 개의 double형 값을 가지고 제곱 연산을 수행
- 예를 들어, pow(a, b)는 a의 b 승, 즉 ab를 반환하게 됨
- 반대로 sqrt() 메소드는 전달된 double형 값의 제곱근 값을 반환

        예제
            System.out.println((int)Math.pow(5, 2)); // 25
            System.out.println((int)Math.sqrt(25));  // 5
        
        실행 결과
            25
            5

## sin() 메소드, cos() 메소드와 tan() 메소드

- 자바에서는 삼각 함수와 관련된 다양한 연산을 간편하게 수행할 수 있도록 많은 삼각 함수를 제공하고 있습니다.
- sin() 메소드는 전달된 double형 값의 사인값을, cos() 메소드는 코사인값을, tan() 메소드는 탄제트값을 반환합니다.
- 이 외에도 Math 클래스에서 제공하는 삼각 함수와 관련된 메소드 <br/> -> asin(), acos(), atan(), atan2(), sinh(), cosh(), tanh()
- 자바의 삼각 함수에 관한 메소드는 정확한 값을 나타내지 못함 -> 실수를 나타내는 데 사용하는 부동 소수점 방식의 한계임

        예제
            System.out.println(Math.sin(Math.toRadians(30)));
            System.out.println(Math.sin(Math.PI / 6))
            
            System.out.println(Math.tan(Math.toRadians(45)));
            System.out.println(Math.tan(Math.PI / 4));
            
            System.out.println(Math.cos(Math.toRadians(60)));
            System.out.println(Math.cos(Math.PI / 3));
        
        실행 결과
            0.49999999999999994            
            0.49999999999999994            
            0.9999999999999999            
            0.9999999999999999            
            0.5000000000000001            
            0.5000000000000001

## Math 메소드 표


<table>
	<thead>
		<tr class="bg">
			<th style="width: 40%;">메소드</th>
			<th style="width: 60%;">설명</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td style="text-align: left;">static double random()</td>
			<td>
			<p>0.0 이상&nbsp;1.0 미만의 범위에서 임의의 double형 값을 하나 생성하여 반환함.</p>
			</td>
		</tr>
		<tr>
			<td style="text-align: left;">
                <p>static double abs(double a)</p>
                <p>static double abs(float a)</p>
                <p>static double abs(int a)</p>
                <p>static double abs(long a)</p>
			</td>
			<td>
			<p>전달된 값이 음수이면 그 값의 절댓값을 반환하며, 전달된 값이 양수이면 인수를 그대로 반환함.</p>
			</td>
		</tr>
		<tr>
			<td style="text-align: left;">static double ceil(double a)</td>
			<td>
			<p>전달된 double형 값의&nbsp;소수 부분이 존재하면 소수 부분을 무조건 올리고 반환함.</p>
			</td>
		</tr>
		<tr>
			<td style="text-align: left;">static double floor(double a)</td>
			<td>전달된 double형 값의&nbsp;소수 부분이 존재하면 소수 부분을 무조건 버리고 반환함.</td>
		</tr>
		<tr>
			<td style="text-align: left;">
                <p>static long round(double a)</p>
                <p>static int&nbsp;round(float&nbsp;a)</p>
			</td>
			<td>
			    <p>전달된 값을&nbsp;소수점 첫째 자리에서 반올림한 정수를 반환함.</p>
			</td>
		</tr>
		<tr>
			<td style="text-align: left;">static double rint(double a)</td>
			<td>전달된 double형 값과 가장 가까운 정수값을 double형으로 반환함.</td>
		</tr>
		<tr>
			<td style="text-align: left;">
                <p>static double max(double a, double b)</p>
                <p>static float&nbsp;max(float a, float b)</p>
                <p>static long&nbsp;max(long a, long b)</p>
                <p>static int&nbsp;max(int a, int b)</p>
			</td>
			<td>
			<p>전달된 두 값을 비교하여 큰&nbsp;값을 반환함.</p>
			</td>
		</tr>
		<tr>
			<td style="text-align: left;">
                <p>static double min(double a, double b)</p>
                <p>static float&nbsp;min(float a, float b)</p>
                <p>static long&nbsp;min(long a, long b)</p>
                <p>static int&nbsp;min(int a, int b)</p>
			</td>
			<td>전달된 두 값을 비교하여 작은 값을 반환함.</td>
		</tr>
		<tr>
			<td style="text-align: left;">static double pow(double a, double b)</td>
			<td>
			    <p>전달된 두 개의&nbsp;double형 값을 가지고 제곱 연산을 수행하여,&nbsp;a<sup>b</sup>을 반환함.</p>
			</td>
		</tr>
		<tr>
			<td style="text-align: left;">static double sqrt(double a)</td>
			<td>
			    <p>전달된 double형 값의 제곱근 값을 반환함.</p>
			</td>
		</tr>
		<tr>
			<td style="text-align: left;">
                <p>static double sin(double a)</p>
                <p>static double cos(double a)</p>
                <p>static double tan(double a)</p>
			</td>
			<td>전달된 double형 값에 해당하는&nbsp;각각의 삼각 함숫값을 반환함.</td>
		</tr>
		<tr>
			<td style="text-align: left;">static double toDegrees(double angrad)</td>
			<td>호도법의 라디안 값을 대략적인 육십분법의 각도 값으로 변환함.</td>
		</tr>
		<tr>
			<td style="text-align: left;">static double toRaidans(double angdeg)</td>
			<td>육십분법의 각도 값을 대략적인 호도법의 라디안 값으로 변환함.</td>
		</tr>
	</tbody>
</table>