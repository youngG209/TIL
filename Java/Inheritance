# 상속 (Inheritance)

## 상속(inheritance)이란?

- 기존 클래스에 기능을 추가하거나 재정의 하여 새로운 클래스를 정의하는 것을 의미
- 캡슐화, 추상화와 더불어 객체 지향 프로그래밍을 구성하는 중요한 특징 중 하나
- 기존에 정의되어 있는 클래스의 모든 필드와 메소드를 물려받아, 새로운 클래스를 생성할 수 있음
- 기존에 정의되어 있는 클래스 : 부모 클래스 or 상위 클래스  or 기초 클래스
- 새로운 클래스 : 자식 클래스 or 하위 클래스 or 파생 클래스

## 상속의 장점
1. 기존에 작성된 클래스를 재활용할 수 있음
2. 자식 클래스 설계 시 중복되는 멤버를 미리 부모 클래스에 작성해 놓으면, 자식 클래스에서는 해당 멤버를 작성하지 않아도 됨
3. 클래스 간의 계층적 관계를 구성함으로써 다형성의 문법적 토대를 마련함

## 자식 클래스 (Child Class)

- 부모 클래스의 모든 특성을 물려받아 새롭게 작성된 클래스를 의미함
- 부모 클래스의 필드와 메소드만이 상속되며, 생성자와 초기화 블록은 상속되지 않음
- 부모 클래스의 접근 제어가 private이나 default로 설정된 멤버는 자식 클래스에서 상속받지만 접근할 수는 없음
- 자바에서 클래스는 단 한 개의 클래스만을 상속받는 단일 상속만 가능

        문법
            class 자식클래스이름 extend 부모클래스이름 {
                .....
            }

        예제
            class Parent {
                private int a = 10; // private 필드
                public int b = 20; // public 필드
            }
  
            class Child extends Parent {
                public int c = 30; // public 필드
                void display() {
                    // System.out.println(a); //    부모 클래스의 private 필드 접근 불가 -> 오류 발생
                    System.out.println(b); //       부모 클래스의 public 필드 상속 받으므로 가능
                    System.out.println(c); //       자식 클랫스에서 자신만의 필드 or 메소드를 선언하여 사용 가능   
                }
            }



